[{"/Users/paulsocarde/Desktop/nasa-project/client/src/index.js":"1","/Users/paulsocarde/Desktop/nasa-project/client/src/App.js":"2","/Users/paulsocarde/Desktop/nasa-project/client/src/settings.js":"3","/Users/paulsocarde/Desktop/nasa-project/client/src/hooks/usePlanets.js":"4","/Users/paulsocarde/Desktop/nasa-project/client/src/hooks/useLaunches.js":"5","/Users/paulsocarde/Desktop/nasa-project/client/src/hooks/requests.js":"6","/Users/paulsocarde/Desktop/nasa-project/client/src/components/Header.js":"7","/Users/paulsocarde/Desktop/nasa-project/client/src/components/Footer.js":"8","/Users/paulsocarde/Desktop/nasa-project/client/src/components/Clickable.js":"9","/Users/paulsocarde/Desktop/nasa-project/client/src/components/Centered.js":"10","/Users/paulsocarde/Desktop/nasa-project/client/src/pages/History.js":"11","/Users/paulsocarde/Desktop/nasa-project/client/src/pages/Launch.js":"12","/Users/paulsocarde/Desktop/nasa-project/client/src/pages/AppLayout.js":"13","/Users/paulsocarde/Desktop/nasa-project/client/src/pages/Upcoming.js":"14"},{"size":152,"mtime":1671445635375,"results":"15","hashOfConfig":"16"},{"size":700,"mtime":1671446138075,"results":"17","hashOfConfig":"16"},{"size":1185,"mtime":1671445635377,"results":"18","hashOfConfig":"16"},{"size":426,"mtime":1671445635375,"results":"19","hashOfConfig":"16"},{"size":1746,"mtime":1671445635375,"results":"20","hashOfConfig":"16"},{"size":610,"mtime":1671465744697,"results":"21","hashOfConfig":"16"},{"size":2650,"mtime":1671446217187,"results":"22","hashOfConfig":"16"},{"size":452,"mtime":1671446197695,"results":"23","hashOfConfig":"16"},{"size":411,"mtime":1671446161168,"results":"24","hashOfConfig":"16"},{"size":489,"mtime":1671446173187,"results":"25","hashOfConfig":"16"},{"size":1482,"mtime":1671446228281,"results":"26","hashOfConfig":"16"},{"size":2043,"mtime":1671446233804,"results":"27","hashOfConfig":"16"},{"size":2734,"mtime":1671448048441,"results":"28","hashOfConfig":"16"},{"size":1918,"mtime":1671446699380,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"184php3",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},"/Users/paulsocarde/Desktop/nasa-project/client/src/index.js",["81"],[],"/Users/paulsocarde/Desktop/nasa-project/client/src/App.js",["82"],[],"/Users/paulsocarde/Desktop/nasa-project/client/src/settings.js",["83"],[],"/Users/paulsocarde/Desktop/nasa-project/client/src/hooks/usePlanets.js",["84"],[],"import { useCallback, useEffect, useState } from \"react\";\n\nimport { httpGetPlanets } from \"./requests\";\n\nfunction usePlanets() {\n  const [planets, savePlanets] = useState([]);\n\n  const getPlanets = useCallback(async () => {\n    const fetchedPlanets = await httpGetPlanets();\n    savePlanets(fetchedPlanets);\n  }, []);\n\n  useEffect(() => {\n    getPlanets();\n  }, [getPlanets]);\n\n  return planets;\n}\n\nexport default usePlanets;\n","/Users/paulsocarde/Desktop/nasa-project/client/src/hooks/useLaunches.js",["85"],[],"import { useCallback, useEffect, useState } from \"react\";\n\nimport {\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n} from './requests';\n\nfunction useLaunches(onSuccessSound, onAbortSound, onFailureSound) {\n  const [launches, saveLaunches] = useState([]);\n  const [isPendingLaunch, setPendingLaunch] = useState(false);\n\n  const getLaunches = useCallback(async () => {\n    const fetchedLaunches = await httpGetLaunches();\n    saveLaunches(fetchedLaunches);\n  }, []);\n\n  useEffect(() => {\n    getLaunches();\n  }, [getLaunches]);\n\n  const submitLaunch = useCallback(async (e) => {\n    e.preventDefault();\n    // setPendingLaunch(true);\n    const data = new FormData(e.target);\n    const launchDate = new Date(data.get(\"launch-day\"));\n    const mission = data.get(\"mission-name\");\n    const rocket = data.get(\"rocket-name\");\n    const target = data.get(\"planets-selector\");\n    const response = await httpSubmitLaunch({\n      launchDate,\n      mission,\n      rocket,\n      target,\n    });\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getLaunches();\n      setTimeout(() => {\n        setPendingLaunch(false);\n        onSuccessSound();\n      }, 800);\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onSuccessSound, onFailureSound]);\n\n  const abortLaunch = useCallback(async (id) => {\n    const response = await httpAbortLaunch(id);\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getLaunches();\n      onAbortSound();\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onAbortSound, onFailureSound]);\n\n  return {\n    launches,\n    isPendingLaunch,\n    submitLaunch,\n    abortLaunch,\n  };\n}\n\nexport default useLaunches;","/Users/paulsocarde/Desktop/nasa-project/client/src/hooks/requests.js",[],[],"/Users/paulsocarde/Desktop/nasa-project/client/src/components/Header.js",["86"],[],"import React from \"react\";\nimport { \n  Logo,\n  Words,\n  Header as ArwesHeader,\n  Highlight,\n  withStyles,\n} from \"arwes\";\nimport { Link } from \"react-router-dom\";\nimport Clickable from \"./Clickable\";\nimport Centered from \"./Centered\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    lineHeight: \"80px\",\n  },\n  logo: {\n    display: \"inherit\",\n    marginTop: \"15px\",\n  },\n  nav: {\n    display: \"inherit\",\n  },\n  banner: {\n    display: \"inherit\",\n    fontWeight: \"bold\",\n    marginLeft: \"10px\",\n    marginRight: \"15px\",\n    fontSize: 28,\n  },\n  clickable: {\n    fontSize: 21,\n    \"& i\": {\n      marginRight: theme.padding / 2,\n      fontSize: 24,\n    },\n  },\n  link: {\n    color: theme.color.content,\n    textDecoration: \"none\",\n  },\n  button: {\n    padding: [0, theme.padding / 2],\n  },\n  \"@media (max-width: 800px)\": {\n    logo: {\n      display: \"none\",\n    },\n    img: {\n      display: \"none\",\n    },\n    banner: {\n      display: \"none\",\n    },\n    button: {\n      padding: [0, 8],\n    },\n    clickable: {\n      fontSize: 16,\n    }\n  },\n});\n\nconst Header = props => {\n  const { classes, onNav, ...rest } = props;\n  return <ArwesHeader animate>\n    <Centered className={classes.root} {...rest}>\n      <img src=\"/favicon.png\" alt=\"\" className={classes.img} style={{\n        margin: \"15px 10px 15px 0\",\n        height: \"50px\",\n        width: \"auto\",\n      }} />\n      <Logo animate size={50} className={classes.logo} layer=\"header\" />\n      <Words animate className={classes.banner}>\n        NASA Mission Control\n      </Words>\n      <nav className={`${classes.nav}`}>\n        <Clickable className={classes.clickable} onClick={onNav}>\n          <Highlight className={classes.button} animate layer=\"header\">\n            <Link className={classes.link} to=\"/launch\">\n              <i className=\"material-icons\">check_circle_outline</i>Launch\n            </Link>\n          </Highlight>\n        </Clickable>\n        <Clickable className={classes.clickable} onClick={onNav}>\n          <Highlight className={classes.button} animate layer=\"header\">\n            <Link className={classes.link} to=\"/upcoming\">\n            <i className=\"material-icons\">update</i>Upcoming</Link>\n          </Highlight>\n        </Clickable>\n        <Clickable className={classes.clickable} onClick={onNav}>\n          <Highlight className={classes.button} animate layer=\"header\">\n            <Link className={classes.link} to=\"/history\">\n            <i className=\"material-icons\">history</i>History</Link>\n          </Highlight>\n        </Clickable>\n      </nav>\n    </Centered>\n  </ArwesHeader>\n};\n\nexport default withStyles(styles)(Header);","/Users/paulsocarde/Desktop/nasa-project/client/src/components/Footer.js",["87"],[],"import React from \"react\";\nimport { Footer as ArwesFooter, Paragraph } from \"arwes\";\nimport Centered from \"./Centered\";\n\nconst Footer = () => {\n  return <ArwesFooter animate>\n    <Centered>\n      <Paragraph style={{ fontSize: 14, margin: \"10px 0\" }}>\n        This is not an official site and is not affiliated with NASA or SpaceX in any way. For educational purposes only.\n      </Paragraph>\n    </Centered>\n  </ArwesFooter>\n};\n\nexport default Footer;\n","/Users/paulsocarde/Desktop/nasa-project/client/src/components/Clickable.js",["88"],[],"import React from \"react\";\nimport { withSounds } from \"arwes\";\n\nconst Clickable = props => {\n  const {\n    children,\n    sounds,\n    onClick,\n    ...rest\n  } = props;\n\n  const clickWithSound = (e) => {\n    sounds.click && sounds.click.play();\n    onClick && onClick(e);\n  };\n\n  return (\n    <span {...rest} onClick={clickWithSound}>\n      {children}\n    </span>\n  );\n};\n\nexport default withSounds()(Clickable);\n","/Users/paulsocarde/Desktop/nasa-project/client/src/components/Centered.js",["89"],[],"import React from \"react\";\nimport { withStyles } from \"arwes\";\n\nconst styles = () => ({\n  root: {\n    margin: \"0 auto\",\n    maxWidth: 800,\n  },\n  \"@media (max-width: 800px)\": {\n    root: {\n      margin: \"0 12px\",\n    }\n  }\n});\n\nconst Centered = props => {\n  const {\n    classes,\n    className,\n    children,\n    ...rest\n  } = props;\n  return (\n    <div className={`${classes.root} ${className}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Centered);\n","/Users/paulsocarde/Desktop/nasa-project/client/src/pages/History.js",["90"],[],"import React from \"react\";\nimport { useMemo } from \"react\";\nimport { Appear, Table, Paragraph } from \"arwes\";\n\nconst History = props => {\n  const tableBody = useMemo(() => {\n    return props.launches?.filter((launch) => !launch.upcoming)\n      .map((launch) => {\n        return <tr key={String(launch.flightNumber)}>\n          <td>\n            <span style={\n              {color: launch.success ? \"greenyellow\" : \"red\"}\n            }>█</span>\n          </td>\n          <td>{launch.flightNumber}</td>\n          <td>{new Date(launch.launchDate).toDateString()}</td>\n          <td>{launch.mission}</td>\n          <td>{launch.rocket}</td>\n          <td>{launch.customers?.join(\", \")}</td>\n        </tr>;\n      });\n  }, [props.launches]);\n\n  return <article id=\"history\">\n    <Appear animate show={props.entered}>\n      <Paragraph>History of mission launches including SpaceX launches starting from the year 2006.</Paragraph>\n      <Table animate>\n        <table style={{tableLayout: \"fixed\"}}>\n          <thead>\n            <tr>\n              <th style={{width: \"2rem\"}}></th>\n              <th style={{width: \"3rem\"}}>No.</th>\n              <th style={{width: \"9rem\"}}>Date</th>\n              <th>Mission</th>\n              <th style={{width: \"7rem\"}}>Rocket</th>\n              <th>Customers</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableBody}\n          </tbody>\n        </table>\n      </Table>\n    </Appear>\n  </article>;\n}\n  \nexport default History;","/Users/paulsocarde/Desktop/nasa-project/client/src/pages/Launch.js",["91"],[],"import React from \"react\";\nimport { useMemo } from \"react\";\nimport { Appear, Button, Loading, Paragraph } from \"arwes\";\nimport Clickable from \"../components/Clickable\";\n\nconst Launch = props => {\n  const selectorBody = useMemo(() => {\n    return props.planets?.map(planet => \n      <option value={planet.kepler_name} key={planet.kepler_name}>{planet.kepler_name}</option>\n    );\n  }, [props.planets]);\n\n  const today = new Date().toISOString().split(\"T\")[0];\n\n  return <Appear id=\"launch\" animate show={props.entered}>\n    <Paragraph>Schedule a mission launch for interstellar travel to one of the Kepler Exoplanets.</Paragraph>\n    <Paragraph>Only confirmed planets matching the following criteria are available for the earliest scheduled missions:</Paragraph>\n    <ul>\n      <li>Planetary radius &lt; 1.6 times Earth's radius</li>\n      <li>Effective stellar flux &gt; 0.36 times Earth's value and &lt; 1.11 times Earth's value</li>\n    </ul>\n\n    <form onSubmit={props.submitLaunch} style={{display: \"inline-grid\", gridTemplateColumns: \"auto auto\", gridGap: \"10px 20px\"}}>\n      <label htmlFor=\"launch-day\">Launch Date</label>\n      <input type=\"date\" id=\"launch-day\" name=\"launch-day\" min={today} max=\"2040-12-31\" defaultValue={today} />\n      <label htmlFor=\"mission-name\">Mission Name</label>\n      <input type=\"text\" id=\"mission-name\" name=\"mission-name\" />\n      <label htmlFor=\"rocket-name\">Rocket Type</label>\n      <input type=\"text\" id=\"rocket-name\" name=\"rocket-name\" defaultValue=\"Explorer IS1\" />\n      <label htmlFor=\"planets-selector\">Destination Exoplanet</label>\n      <select id=\"planets-selector\" name=\"planets-selector\">\n        {selectorBody}\n      </select>\n      <Clickable>\n        <Button animate \n          show={props.entered} \n          type=\"submit\" \n          layer=\"success\" \n          disabled={props.isPendingLaunch}>\n          Launch Mission ✔\n        </Button>\n      </Clickable>\n      {props.isPendingLaunch &&\n        <Loading animate small />\n      }\n    </form>\n  </Appear>\n};\n\nexport default Launch;","/Users/paulsocarde/Desktop/nasa-project/client/src/pages/AppLayout.js",[],[],"/Users/paulsocarde/Desktop/nasa-project/client/src/pages/Upcoming.js",["92"],[],"import React from \"react\";\nimport { useMemo } from \"react\";\nimport { \n  withStyles,\n  Appear,\n  Link,\n  Paragraph,\n  Table,\n  Words,\n} from \"arwes\";\n\nimport Clickable from \"../components/Clickable\";\n\nconst styles = () => ({\n  link: {\n    color: \"red\",\n    textDecoration: \"none\",\n  },\n});\n\nconst Upcoming = props => {\n  const { \n    entered,\n    launches,\n    classes,\n    abortLaunch,\n  } = props;\n\n  const tableBody = useMemo(() => {\n    return launches?.filter((launch) => launch.upcoming)\n      .map((launch) => {\n        return <tr key={String(launch.flightNumber)}>\n          <td>\n            <Clickable style={{color:\"red\"}}>\n              <Link className={classes.link} onClick={() => abortLaunch(launch.flightNumber)}>\n                ✖\n              </Link>\n            </Clickable>\n          </td>\n          <td>{launch.flightNumber}</td>\n          <td>{new Date(launch.launchDate).toDateString()}</td>\n          <td>{launch.mission}</td>\n          <td>{launch.rocket}</td>\n          <td>{launch.target}</td>\n        </tr>;\n      });\n  }, [launches, abortLaunch, classes.link]);\n\n  return <Appear id=\"upcoming\" animate show={entered}>\n    <Paragraph>Upcoming missions including both SpaceX launches and newly scheduled Zero to Mastery rockets.</Paragraph>\n    <Words animate>Warning! Clicking on the ✖ aborts the mission.</Words>\n    <Table animate show={entered}>\n      <table style={{tableLayout: \"fixed\"}}>\n        <thead>\n          <tr>\n            <th style={{width: \"3rem\"}}></th>\n            <th style={{width: \"3rem\"}}>No.</th>\n            <th style={{width: \"10rem\"}}>Date</th>\n            <th style={{width: \"11rem\"}}>Mission</th>\n            <th style={{width: \"11rem\"}}>Rocket</th>\n            <th>Destination</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tableBody}\n        </tbody>\n      </table>\n    </Table>\n  </Appear>;\n}\n\nexport default withStyles(styles)(Upcoming);",{"ruleId":null,"fatal":true,"severity":2,"message":"93"},{"ruleId":null,"fatal":true,"severity":2,"message":"93"},{"ruleId":null,"fatal":true,"severity":2,"message":"93"},{"ruleId":null,"fatal":true,"severity":2,"message":"93"},{"ruleId":null,"fatal":true,"severity":2,"message":"93"},{"ruleId":null,"fatal":true,"severity":2,"message":"93"},{"ruleId":null,"fatal":true,"severity":2,"message":"93"},{"ruleId":null,"fatal":true,"severity":2,"message":"93"},{"ruleId":null,"fatal":true,"severity":2,"message":"93"},{"ruleId":null,"fatal":true,"severity":2,"message":"93"},{"ruleId":null,"fatal":true,"severity":2,"message":"93"},{"ruleId":null,"fatal":true,"severity":2,"message":"93"},"Parsing error: Plugin/Preset files are not allowed to export objects, only functions. In /Users/paulsocarde/Desktop/nasa-project/client/node_modules/babel-preset-es2015/lib/index.js"]