{"ast":null,"code":"import _regeneratorRuntime from \"/Users/paulsocarde/Desktop/nasa-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/paulsocarde/Desktop/nasa-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/paulsocarde/Desktop/nasa-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { httpGetPlanets } from \"./requests\";\nfunction usePlanets() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    planets = _useState2[0],\n    savePlanets = _useState2[1];\n  var getPlanets = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var fetchedPlanets;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return httpGetPlanets();\n          case 2:\n            fetchedPlanets = _context.sent;\n            savePlanets(fetchedPlanets);\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  useEffect(function () {\n    getPlanets();\n  }, [getPlanets]);\n  return planets;\n}\nexport default usePlanets;","map":{"version":3,"names":["useCallback","useEffect","useState","httpGetPlanets","usePlanets","planets","savePlanets","getPlanets","fetchedPlanets"],"sources":["/Users/paulsocarde/Desktop/nasa-project/client/src/hooks/usePlanets.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport { httpGetPlanets } from \"./requests\";\n\nfunction usePlanets() {\n  const [planets, savePlanets] = useState([]);\n\n  const getPlanets = useCallback(async () => {\n    const fetchedPlanets = await httpGetPlanets();\n    savePlanets(fetchedPlanets);\n  }, []);\n\n  useEffect(() => {\n    getPlanets();\n  }, [getPlanets]);\n\n  return planets;\n}\n\nexport default usePlanets;\n"],"mappings":";;;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,SAASC,cAAc,QAAQ,YAAY;AAE3C,SAASC,UAAU,GAAG;EAAA,gBACWF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAApCG,OAAO;IAAEC,WAAW;EAE3B,IAAMC,UAAU,GAAGP,WAAW,wEAAC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACAG,cAAc,EAAE;UAAA;YAAvCK,cAAc;YACpBF,WAAW,CAACE,cAAc,CAAC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAC7B,IAAE,EAAE,CAAC;EAENP,SAAS,CAAC,YAAM;IACdM,UAAU,EAAE;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,OAAOF,OAAO;AAChB;AAEA,eAAeD,UAAU"},"metadata":{},"sourceType":"module"}